apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "xiejinpeng.xandroidarichitecture"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    // 署名
    signingConfigs {
        debug {
        }

        release {
            storeFile file('keystore/release.keystore')
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "androiddebugkey"
        }
    }

    // ビルドタイプ
    buildTypes {
        debug {
            multiDexEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            multiDexEnabled true
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // ビルド環境
    productFlavors {
        // 本番環境
        production {
            resValue "string", "version_code", "Version ${defaultConfig.versionName}"
            buildConfigField "String", "BASE_URL", '"http://baseurl/"'
            buildConfigField "boolean", "ALLOW_ALL_CERTIFICATES", "false"
            signingConfig signingConfigs.release
        }
        // 検証環境
        staging {
            applicationIdSuffix ".staging"

            resValue "string", "version_code", "Version ${defaultConfig.versionName} .staging"
            buildConfigField "String", "BASE_URL", '"http://kpstg.kitamura.jp/aup-relay/"'
            buildConfigField "boolean", "ALLOW_ALL_CERTIFICATES", "true"
            signingConfig signingConfigs.release
        }
        // 開発環境
        develop {
            applicationIdSuffix ".develop"

            resValue "string", "version_code", "Version ${defaultConfig.versionName} .develop"
            buildConfigField "String", "BASE_URL", '"http://kpstg.kitamura.jp/aup-relay/"'
            buildConfigField "String", "BASE_URL_V2", '"https://www.kitamura-print.com/chokkobin2018stg/"'
            buildConfigField "boolean", "ALLOW_ALL_CERTIFICATES", "true"
            signingConfig signingConfigs.debug
        }
    }

    flavorDimensions "default"

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    dataBinding {
        enabled = true
    }
}

dependencies {

    def rx_version = "2.2.13"
    def retrofit_version = "2.6.2"
    def okhttp_version = '4.2.2'
    def kodein_version = "6.4.1"
    def lifecycle_version = "2.1.0"
    def room_version = "2.2.0-rc01"
    def activity_version = "1.0.0"
    def kotpref_version = "2.9.2"


    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    //AndroidX
    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta2'
    implementation "androidx.activity:activity-ktx:$activity_version"
    implementation 'androidx.core:core-ktx:1.1.0'


    //Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version" // For Kotlin use lifecycle-reactivestreams-ktx

    //Database
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    //DI
    implementation "org.kodein.di:kodein-di-generic-jvm:${kodein_version}"
    implementation "org.kodein.di:kodein-di-framework-android-x:${kodein_version}"

    //Rx
    implementation "io.reactivex.rxjava2:rxjava:$rx_version"
    implementation "io.reactivex.rxjava2:rxkotlin:2.3.0"
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar'

    //SharedPreference
    implementation "com.chibatching.kotpref:kotpref:${kotpref_version}"
    implementation "com.chibatching.kotpref:initializer:${kotpref_version}"



    //Retrofit OkHttp
    implementation "com.squareup.okhttp3:okhttp:${okhttp_version}"
    implementation "com.squareup.okhttp3:logging-interceptor:${okhttp_version}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${retrofit_version}"
    implementation "com.squareup.retrofit2:converter-moshi:${retrofit_version}"
    implementation("com.squareup.retrofit2:retrofit:${retrofit_version}") {
        exclude module: 'okhttp'
    }
    //Retrofit xml converter
    implementation("com.squareup.retrofit2:converter-simplexml:${retrofit_version}") {
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'stax', module: 'stax'
        exclude group: 'xpp3', module: 'xpp3'
    }

    //OAuth2
    implementation('org.apache.oltu.oauth2:org.apache.oltu.oauth2.client:1.0.1') {
        exclude group: 'org.apache.oltu.oauth2', module: 'org.apache.oltu.oauth2.common'
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }

    //Json Serializer
    implementation 'com.squareup.moshi:moshi-kotlin:1.8.0'
    implementation 'se.ansman.kotshi:api:2.0.1'
    kapt 'se.ansman.kotshi:compiler:2.0.1'

    //FragmentManager
    implementation "com.github.Yumenokanata:FragmentManager:2.7.1"

    //Log
    implementation 'com.jakewharton.timber:timber:4.7.1'

    //Debug Stetho
    debugImplementation 'com.facebook.stetho:stetho:1.5.1'
    debugImplementation 'com.facebook.stetho:stetho-okhttp3:1.5.1'

    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.1'
    implementation 'androidx.multidex:multidex:2.0.1'

    //Test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
}
